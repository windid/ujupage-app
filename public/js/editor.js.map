{"version":3,"sources":["webpack:///webpack/bootstrap ff7a301b4420afbe0ac0","webpack:///./resources/assets/js/pages/editor/index.js","webpack:///external \"avalon\"","webpack:///./resources/assets/js/ui/oniui/mmRequest/mmRequest.js","webpack:///./resources/assets/js/ui/oniui/mmPromise/mmPromise.js","webpack:///./resources/assets/js/pages/editor/vmodel.js","webpack:///./resources/assets/js/pages/editor/header/index.js","webpack:///./resources/assets/js/pages/editor/header/vmodel.js","webpack:///./resources/assets/js/pages/editor/header/view.html","webpack:///./resources/assets/js/pages/editor/toolbar/index.js","webpack:///./resources/assets/js/pages/editor/toolbar/vmodel.js","webpack:///./resources/assets/js/pages/editor/toolbar/view.html","webpack:///./resources/assets/js/pages/editor/workspace/index.js","webpack:///./resources/assets/js/ui/oniui/resizable/avalon.resizable.js","webpack:///./resources/assets/js/ui/oniui/draggable/avalon.draggable.js","webpack:///./resources/assets/js/pages/editor/workspace/widget/pageitem.js","webpack:///./resources/assets/js/pages/editor/workspace/vmodel.js","webpack:///./resources/assets/js/pages/editor/workspace/view.html","webpack:///./resources/assets/js/pages/editor/view.html"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;ACnBA,yB;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;;;;AAKA;AACA;AACA;AACA,2DAA0D;AAC1D;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD;AACxD;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;;AAEA,qDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,gCAA+B,oBAAoB;AACnD;AACA;AACA;AACA,UAAS;AACT;AACA,gCAA+B,oBAAoB;AACnD;AACA;AACA;AACA,UAAS;;;AAGT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA0F;AAC1F,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL,8BAA6B;AAC7B;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA,oCAAmC;AACnC;AACA,cAAa;AACb;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA,uFAAsF;AACtF;AACA;AACA,0BAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAiC;AACjC;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,8DAA6D;AAC7D;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAsE,aAAa,YAAY;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;iECzhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B;AAC9B;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,uCAAsC,qCAAqC;AAC3E;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA,iDAAgD,OAAO;AACvD;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;;AAEA,EAAC;AACD;AACA;;;;;;;AC5NA;AACA;AACA;AACA,EAAC,E;;;;;;ACHD;;AAEA;AACA;;;;;;;ACHA;AACA;AACA;AACA,EAAC,E;;;;;;ACHD,ilC;;;;;;ACAA;;AAEA;AACA;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,E;;;;;;ACxDD,oNAAmN,UAAU,2CAA2C,SAAS,yB;;;;;;ACAjR;AACA;AACA;;AAEA;AACA;;;;;;;iECLA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAqB;AACrB;AACA;AACA;AACA,wDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,qCAAqC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oDAAmD;AACnD;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA,mDAAkD;AAClD;AACA,UAAS;AACT;AACA;AACA;AACA,yCAAwC;AACxC,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,uDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D;AAC5D,cAAa;AACb,uDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,gCAA+B,4BAA4B;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAmC;AACnC;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;iECzPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA4C,6BAA6B,8BAA8B,4BAA4B,2BAA2B,wBAAwB,gCAAgC,uBAAuB,2BAA2B;AACxQ;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,2BAA2B,kBAAkB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;;AC7ZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,EAAC,gJ;;;;;;ACdD;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,oBAAmB,qCAAqC;AACxD;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,wBAAuB,qCAAqC;AAC5D;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA,gBAAe,qCAAqC;AACpD;AACA;AACA;AACA;AACA,mCAAkC,SAAS;AAC3C;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA,gBAAe,0CAA0C;AACzD;;AAEA,UAAS;AACT,MAAK;;AAEL;AACA,gBAAe,0CAA0C;AACzD;;AAEA,UAAS;AACT;AACA;;AAEA;;;;;;;;ACjGA,mOAAkO,+BAA+B,qBAAqB,sBAAsB,yBAAyB,0BAA0B,0FAA0F,sBAAsB,qHAAqH,cAAc,yC;;;;;;ACAllB,sS","file":"editor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ff7a301b4420afbe0ac0\n **/","//Avalon采用外部引入，不打包\nvar avalon = require(\"avalon\")\n//Avalon Ajax模块\nrequire('../../ui/oniui/mmRequest/mmRequest');\n\n//全局VM\nrequire('./vmodel');\n\n//编辑器头部\nrequire('./header');\n\n//组件栏\nrequire('./toolbar');\n\n//编辑区\nrequire('./workspace');\n\n//布局模板\navalon.templateCache['layout'] = require('./view.html');\navalon.vmodels.editor.tpl = \"layout\";\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/pages/editor/index.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = avalon;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"avalon\"\n ** module id = 2\n ** module chunks = 0\n **/","//=========================================\n//  数据交互模块 by 司徒正美\n//  版本: 1.0.0\n//  最近更新: 2015/4/30\n//==========================================\ndefine([\"avalon\", \"../mmPromise/mmPromise\"], function(avalon) {\n    var global = window\n    var DOC = global.document\n    var encode = encodeURIComponent\n    var decode = decodeURIComponent\n\n    var rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/\n    var rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg\n    var rnoContent = /^(?:GET|HEAD)$/\n    var rprotocol = /^\\/\\//\n    var rhash = /#.*$/\n    var rquery = /\\?/\n    var rjsonp = /(=)\\?(?=&|$)|\\?\\?/\n    var r20 = /%20/g\n    var radd = /\\+/g\n    var r5b5d = /%5B(.*?)%5D$/;\n\n    var originAnchor = document.createElement(\"a\")\n    originAnchor.href = location.href\n    //告诉WEB服务器自己接受什么介质类型，*/* 表示任何类型，type/* 表示该类型下的所有子类型，type/sub-type。\n    var accepts = {\n        xml: \"application/xml, text/xml\",\n        html: \"text/html\",\n        text: \"text/plain\",\n        json: \"application/json, text/javascript\",\n        script: \"text/javascript, application/javascript\",\n        \"*\": [\"*/\"] + [\"*\"] //避免被压缩掉\n    }\n\n    function IE() {\n        if (window.VBArray) {\n            var mode = document.documentMode\n            return mode ? mode : window.XMLHttpRequest ? 7 : 6\n        } else {\n            return 0\n        }\n    }\n    var useOnload = IE() === 0 || IE() > 8\n\n    function parseJS(code) {\n        var indirect = eval\n        code = code.trim()\n        if (code) {\n            if (code.indexOf(\"use strict\") === 1) {\n                var script = document.createElement(\"script\")\n                script.text = code;\n                head.appendChild(script).parentNode.removeChild(script)\n            } else {\n                indirect(code)\n            }\n        }\n    }\n\n    if (!String.prototype.startsWith) {\n        String.prototype.startsWith = function(searchString, position) {\n            position = position || 0;\n            return this.lastIndexOf(searchString, position) === position;\n        }\n    }\n\n    var head = DOC.getElementsByTagName(\"head\")[0] //HEAD元素\n    var isLocal = false\n    try {\n        //在IE下如果重置了document.domain，直接访问window.location会抛错，但用document.URL就ok了\n        //http://www.cnblogs.com/WuQiang/archive/2012/09/21/2697474.html\n        isLocal = rlocalProtocol.test(location.protocol)\n    } catch (e) {\n    }\n\n    new function() {\n        //http://www.cnblogs.com/rubylouvre/archive/2010/04/20/1716486.html\n        var s = [\"XMLHttpRequest\",\n            \"ActiveXObject('MSXML2.XMLHTTP.6.0')\",\n            \"ActiveXObject('MSXML2.XMLHTTP.3.0')\",\n            \"ActiveXObject('MSXML2.XMLHTTP')\",\n            \"ActiveXObject('Microsoft.XMLHTTP')\"\n        ]\n        s[0] = IE() < 8 && IE() !== 0 && isLocal ? \"!\" : s[0] //IE下只能使用ActiveXObject\n        for (var i = 0, axo; axo = s[i++];) {\n            try {\n                if (eval(\"new \" + axo)) {\n                    avalon.xhr = new Function(\"return new \" + axo)\n                    break;\n                }\n            } catch (e) {\n            }\n        }}\n    var supportCors = \"withCredentials\" in avalon.xhr()\n\n\n\n\n    function parseXML(data, xml, tmp) {\n        try {\n            var mode = document.documentMode\n            if (window.DOMParser && (!mode || mode > 8)) { // Standard\n                tmp = new DOMParser()\n                xml = tmp.parseFromString(data, \"text/xml\")\n            } else { // IE\n                xml = new ActiveXObject(\"Microsoft.XMLDOM\") //\"Microsoft.XMLDOM\"\n                xml.async = \"false\";\n                xml.loadXML(data)\n            }\n        } catch (e) {\n        xml = void  0\n        }\n        if (!xml || !xml.documentElement || xml.getElementsByTagName(\"parsererror\").length) {\n            avalon.error(\"Invalid XML: \" + data)\n        }\n        return xml\n    }\n\n    //ajaxExtend是一个非常重要的内部方法，负责将用法参数进行规整化\n    //1. data转换为字符串\n    //2. type转换为大写\n    //3. url正常化，加querystring, 加时间戮\n    //4. 判定有没有跨域\n    //5. 添加hasContent参数\n    var defaults = {\n        type: \"GET\",\n        contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n        async: true,\n        jsonp: \"callback\"\n    }\n    function ajaxExtend(opts) {\n        opts = avalon.mix({}, defaults, opts)\n        opts.type = opts.type.toUpperCase()\n        var querystring = typeof opts.data === \"string\" ? opts.data : avalon.param(opts.data)\n        opts.querystring = querystring || \"\"\n        opts.url = opts.url.replace(rhash, \"\").replace(rprotocol, location.protocol + \"//\")\n\n        if (typeof opts.crossDomain !== \"boolean\") { //判定是否跨域\n            var urlAnchor = document.createElement(\"a\");\n            // Support: IE6-11+\n            // IE throws exception if url is malformed, e.g. http://example.com:80x/\n            try {\n                urlAnchor.href = opts.url;\n                // in IE7-, get the absolute path\n                var absUrl = !\"1\"[0] ? urlAnchor.getAttribute(\"href\", 4) : urlAnchor.href;\n                urlAnchor.href = absUrl\n                opts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !== urlAnchor.protocol + \"//\" + urlAnchor.host;\n            } catch (e) {\n            opts.crossDomain = true;\n            }\n        }\n        opts.hasContent = !rnoContent.test(opts.type) //是否为post请求\n        if (!opts.hasContent) {\n            if (querystring) { //如果为GET请求,则参数依附于url上\n                opts.url += (rquery.test(opts.url) ? \"&\" : \"?\") + querystring;\n            }\n            if (opts.cache === false) { //添加时间截\n                opts.url += (rquery.test(opts.url) ? \"&\" : \"?\") + \"_time=\" + (new Date() - 0)\n            }\n        }\n        return opts;\n    }\n    /**\n     * 伪XMLHttpRequest类,用于屏蔽浏览器差异性\n     * var ajax = new(self.XMLHttpRequest||ActiveXObject)(\"Microsoft.XMLHTTP\")\n     * ajax.onreadystatechange = function(){\n     *   if (ajax.readyState==4 && ajax.status==200){\n     *        alert(ajax.responseText)\n     *   }\n     * }\n     * ajax.open(\"POST\", url, true) \n     * ajax.send(\"key=val&key1=val2\") \n     */\n    var XHRMethods = {\n        setRequestHeader: function(name, value) {\n            this.requestHeaders[name] = value;\n            return this;\n        },\n        getAllResponseHeaders: function() {\n            return this.readyState === 4 ? this.responseHeadersString : null;\n        },\n        getResponseHeader: function(name, match) {\n            if (this.readyState === 4) {\n                while ((match = rheaders.exec(this.responseHeadersString))) {\n                    this.responseHeaders[match[1]] = match[2];\n                }\n                match = this.responseHeaders[name];\n            }\n            return match === undefined ? null : match;\n        },\n        overrideMimeType: function(type) {\n            this.mimeType = type;\n            return this;\n        },\n        // 中止请求\n        abort: function(statusText) {\n            statusText = statusText || \"abort\";\n            if (this.transport) {\n                this.respond(0, statusText)\n            }\n            return this;\n        },\n        /**\n         * 用于派发success,error,complete等回调\n         * http://www.cnblogs.com/rubylouvre/archive/2011/05/18/2049989.html\n         * @param {Number} status 状态码\n         * @param {String} statusText 对应的扼要描述\n         */\n        dispatch: function(status, nativeStatusText) {\n            var statusText = nativeStatusText\n            // 只能执行一次，防止重复执行\n            if (!this.transport) { //2:已执行回调\n                return\n            }\n            this.readyState = 4\n            var isSuccess = status >= 200 && status < 300 || status === 304\n            if (isSuccess) {\n                if (status === 204) {\n                    statusText = \"nocontent\"\n                } else if (status === 304) {\n                    statusText = \"notmodified\"\n                } else {\n                    //如果浏览器能直接返回转换好的数据就最好不过,否则需要手动转换\n                    if (typeof this.response === \"undefined\") {\n                        var dataType = this.options.dataType || this.options.mimeType\n                        if (!dataType && this.responseText || this.responseXML) { //如果没有指定dataType，则根据mimeType或Content-Type进行揣测\n                            dataType = this.getResponseHeader(\"Content-Type\") || \"\"\n                            dataType = dataType.match(/json|xml|script|html/i) || [\"text\"]\n                            dataType = dataType[0].toLowerCase()\n                        }\n                        var responseText = this.responseText || '',\n                            responseXML = this.responseXML || ''\n                        try {\n                            this.response = avalon.ajaxConverters[dataType].call(this, responseText, responseXML)\n                        } catch (e) {\n                        isSuccess = false\n                        this.error = e\n                        statusText = \"parsererror\"\n                        }\n                    }\n                }\n            }\n            this.status = status;\n            this.statusText = statusText + \"\"\n            if (this.timeoutID) {\n                clearTimeout(this.timeoutID)\n                delete this.timeoutID\n            }\n            this._transport = this.transport\n\n            /**\n             * global event handler\n             */\n            var that = this\n\n            // 到这要么成功，调用success, 要么失败，调用 error, 最终都会调用 complete\n            if (isSuccess) {\n                this._resolve([this.response, statusText, this])\n                /**\n                 * global event handler\n                 */\n                window.setTimeout(function() {\n                    avalon.ajaxGlobalEvents.success(that, that.options, that.response)\n                }, 0)\n            } else {\n                this._reject([this, statusText, this.error])\n                /**\n                 * global event handler\n                 */\n                window.setTimeout(function() {\n                    avalon.ajaxGlobalEvents.error(that, that.options, statusText)\n                }, 0)\n            }\n            delete this.transport\n\n            /**\n             * global event handler\n             */\n            ajaxActive--\n\n            window.setTimeout(function() {\n                avalon.ajaxGlobalEvents.complete(that, that.options)\n            }, 0)\n\n            if (ajaxActive === 0) {\n                // 最后一个\n                window.setTimeout(function() {\n                    avalon.ajaxGlobalEvents.stop()\n                }, 0)\n            }\n\n        }\n    }\n    /**\n     * global event handler\n     */\n    // 记录当前活跃的 ajax 数\n    var ajaxActive = 0\n\n    //ajax主函数\n    avalon.ajax = function(opts, promise) {\n        if (!opts || !opts.url) {\n            avalon.error(\"参数必须为Object并且拥有url属性\")\n        }\n        opts = ajaxExtend(opts) //处理用户参数，比如生成querystring, type大写化\n        //创建一个伪XMLHttpRequest,能处理complete,success,error等多投事件\n        var XHRProperties = {\n            responseHeadersString: \"\",\n            responseHeaders: {},\n            requestHeaders: {},\n            querystring: opts.querystring,\n            readyState: 0,\n            uniqueID: (\"\" + Math.random()).replace(/0\\./, \"\"),\n            status: 0\n        }\n        var _reject, _resolve\n        var promise = new avalon.Promise(function(resolve, reject) {\n            _resolve = resolve\n            _reject = reject\n        })\n\n        promise.options = opts\n        promise._reject = _reject\n        promise._resolve = _resolve\n\n        var doneList = [],\n            failList = []\n\n        Array(\"done\", \"fail\", \"always\").forEach(function(method) {\n            promise[method] = function(fn) {\n                if (typeof fn === \"function\") {\n                    if (method !== \"fail\")\n                        doneList.push(fn)\n                    if (method !== \"done\")\n                        failList.push(fn)\n                }\n                return this\n            }\n        })\n\n        var isSync = opts.async === false\n        if (isSync) {\n            avalon.log(\"warnning:与jquery1.8一样,async:false这配置已经被废弃\")\n            promise.async = false\n        }\n\n\n        avalon.mix(promise, XHRProperties, XHRMethods)\n\n        promise.then(function(value) {\n            value = Array.isArray(value) ? value : value === void 0 ? [] : [value]\n            for (var i = 0, fn; fn = doneList[i++];) {\n                fn.apply(promise, value)\n            }\n            return value\n        }, function(value) {\n            value = Array.isArray(value) ? value : value === void 0 ? [] : [value]\n            for (var i = 0, fn; fn = failList[i++];) {\n                fn.apply(promise, value)\n            }\n            return value\n        })\n\n\n        promise.done(opts.success).fail(opts.error).always(opts.complete)\n\n        var dataType = opts.dataType //目标返回数据类型\n        var transports = avalon.ajaxTransports\n\n        if ((opts.crossDomain && !supportCors || rjsonp.test(opts.url)) && dataType === \"json\" && opts.type === \"GET\") {\n            dataType = opts.dataType = \"jsonp\"\n        }\n        var name = opts.form ? \"upload\" : dataType\n        var transport = transports[name] || transports.xhr\n        avalon.mix(promise, transport) //取得传送器的request, respond, preproccess\n        if (promise.preproccess) { //这用于jsonp upload传送器\n            dataType = promise.preproccess() || dataType\n        }\n        //设置首部 1、Content-Type首部\n        if (opts.contentType) {\n            promise.setRequestHeader(\"Content-Type\", opts.contentType)\n        }\n        //2.处理Accept首部\n        promise.setRequestHeader(\"Accept\", accepts[dataType] ? accepts[dataType] + \", */*; q=0.01\" : accepts[\"*\"])\n        for (var i in opts.headers) { //3. 处理headers里面的首部\n            promise.setRequestHeader(i, opts.headers[i])\n        }\n        // 4.处理超时\n        if (opts.async && opts.timeout > 0) {\n            promise.timeoutID = setTimeout(function() {\n                promise.abort(\"timeout\")\n                promise.dispatch(0, \"timeout\")\n            }, opts.timeout)\n        }\n\n        /**\n         * global event handler\n         */\n        if (ajaxActive === 0) {\n            // 第一个\n            avalon.ajaxGlobalEvents.start()\n        }\n        avalon.ajaxGlobalEvents.send(promise, opts)\n        ajaxActive++\n\n\n\n        promise.request()\n        return promise\n    };\n    \"get,post\".replace(avalon.rword, function(method) {\n        avalon[method] = function(url, data, callback, type) {\n            if (typeof data === \"function\") {\n                type = type || callback\n                callback = data\n                data = void 0\n            }\n            return avalon.ajax({\n                type: method,\n                url: url,\n                data: data,\n                success: callback,\n                dataType: type\n            })\n        };\n    })\n    function ok(val) {\n        return val\n    }\n    function ng(e) {\n        throw e\n    }\n    avalon.getScript = function(url, callback) {\n        return avalon.get(url, null, callback, \"script\")\n    }\n    avalon.getJSON = function(url, data, callback) {\n        return avalon.get(url, data, callback, \"json\")\n    }\n    avalon.upload = function(url, form, data, callback, dataType) {\n        if (typeof data === \"function\") {\n            dataType = callback;\n            callback = data;\n            data = void 0;\n        }\n        return avalon.ajax({\n            url: url,\n            type: \"post\",\n            dataType: dataType,\n            form: form,\n            data: data,\n            success: callback\n        });\n    }\n\n\n    /**\n     * global event handler\n     */\n    avalon.ajaxGlobalEvents = {};\n\n    [\"start\", \"stop\", \"complete\", \"error\", \"success\", \"send\"].forEach(function(method) {\n        avalon.ajaxGlobalEvents[method] = avalon.noop\n    })\n\n    avalon.ajaxConverters = { //转换器，返回用户想要做的数据\n        text: function(text) {\n            // return text || \"\";\n            return text;\n        },\n        xml: function(text, xml) {\n            return xml !== void 0 ? xml : parseXML(text)\n        },\n        html: function(text) {\n            return avalon.parseHTML(text) //一个文档碎片,方便直接插入DOM树\n        },\n        json: function(text) {\n            if (!avalon.parseJSON) {\n                avalon.log(\"avalon.parseJSON不存在,请升级到最新版\")\n            }\n            return avalon.parseJSON(text)\n        },\n        script: function(text) {\n            parseJS(text)\n            return text;\n        },\n        jsonp: function() {\n            var json, callbackName;\n            if (this.jsonpCallback.startsWith('avalon.')) {\n                callbackName = this.jsonpCallback.replace(/avalon\\./, '')\n                json = avalon[callbackName]\n                delete avalon[callbackName]\n            } else {\n                json = window[this.jsonpCallback]\n            }\n            return json;\n        }\n    }\n\n    var rbracket = /\\[\\]$/\n    avalon.param = function(obj) {\n        var prefix,\n            s = [],\n            add = function(key, value) {\n                // If value is a function, invoke it and return its value\n                value = typeof value === \"function\" ? value() : (value == null ? \"\" : value);\n                s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n        }\n        // 处理数组与类数组的jquery对象\n        if (Array.isArray(obj)) {\n            // Serialize the form elements\n            avalon.each(obj, add)\n\n        } else {\n            for (prefix in obj) {\n                paramInner(prefix, obj[prefix], add);\n            }\n        }\n\n        // Return the resulting serialization\n        return s.join(\"&\").replace(r20, \"+\");\n    }\n\n    function paramInner(prefix, obj, add) {\n        var name;\n        if (Array.isArray(obj)) {\n            // Serialize array item.\n            avalon.each(obj, function(i, v) {\n                if (rbracket.test(prefix)) {\n                    // Treat each array item as a scalar.\n                    add(prefix, v);\n                } else {\n                    // Item is non-scalar (array or object), encode its numeric index.\n                    paramInner(\n                        prefix + \"[\" + (typeof v === \"object\" ? i : \"\") + \"]\",\n                        v,\n                        add);\n                }\n            });\n        } else if (avalon.isPlainObject(obj)) {\n            // Serialize object item.\n            for (name in obj) {\n                paramInner(prefix + \"[\" + name + \"]\", obj[name], add);\n            }\n\n        } else {\n            // Serialize scalar item.\n            add(prefix, obj);\n        }\n    }\n    //将一个字符串转换为对象\n    function tryDecodeURIComponent(value) {\n        try {\n            return decodeURIComponent(value);\n        } catch (e) {\n        return value\n        }\n    }\n\n\n    //a%5B0%5D%5Bvalue%5D a%5B1%5D%5B%5D\n    function addSubObject(host, text, value) {\n        var match = text.match(r5b5d)\n        if (!match) {\n            return true\n        }\n\n        var steps = []\n        var first = true\n        var step, index, key\n        while (index = text.lastIndexOf(\"%5B\")) {\n            if (index === -1) {\n                break\n            }\n            key = text.slice(index).slice(3, -3)\n            text = text.slice(0, index)\n            if (key === \"\") {\n                steps.unshift({\n                    action: \"pushArrayElement\"\n                })\n            } else if ((key >>> 0) + \"\" === key) {\n                steps.unshift({\n                    action: \"setSubArray\",\n                    value: key\n                })\n            } else {\n                if (first) {\n                    steps.unshift({\n                        action: \"setObjectProperty\",\n                        value: tryDecodeURIComponent(key)\n                    })\n                } else {\n                    steps.unshift({\n                        action: \"setSubObjet\",\n                        value: tryDecodeURIComponent(key)\n                    })\n                }\n            }\n            first = false\n        }\n        first = true\n        while (step = steps.shift()) {\n            var isObject = /Object/.test(step.action)\n            if (first) {\n                if (!(text in host)) {\n                    host[text] = isObject ? {} : []\n                }\n                first = false\n                host = host[text]\n            }\n            switch (step.action) {\n                case \"pushArrayElement\":\n                    host.push(value)\n                    break\n                case \"setObjectProperty\":\n                    host[step.value] = value\n                    break\n                case \"setSubObjet\":\n                    if (!(step.value in host)) {\n                        host[step.value] = {}\n                    }\n                    host = host[step.value]\n                    break\n                case \"setSubArray\":\n                    if (!(step.value in host)) {\n                        host[step.value] = []\n                    }\n                    host = host[step.value]\n                    break\n            }\n        }\n    }\n    //  function add\n    avalon.unparam = function(qs, sep, eq) {\n        sep = sep || '&';\n        eq = eq || '=';\n        var obj = {};\n        if ((typeof qs !== \"string\") || qs.length === 0) {\n            return obj;\n        }\n        if (qs.indexOf(\"?\") !== -1) {\n            qs = qs.split(\"?\").pop()\n        }\n        var array = qs.split(sep);\n        for (var i = 0, el; el = array[i++];) {\n            var arr = el.split(\"=\")\n            if (arr.length === 1) { //处理只有键名没键值的情况\n                obj[arr[0]] = \"\"\n            } else {\n                var key = arr[0].replace(radd, '%20')\n                var v = tryDecodeURIComponent(arr.slice(1).join(\"=\").replace(radd, ' '));\n                if (addSubObject(obj, key, v)) { //处理存在中括号的情况\n                    var k = tryDecodeURIComponent(key) //处理不存在中括号的简单的情况\n                    if (!Object.prototype.hasOwnProperty.call(obj, k)) {\n                        obj[k] = v;\n                    } else if (Array.isArray(obj[k])) {\n                        obj[k].push(v);\n                    } else {\n                        obj[k] = [obj[k], v];\n                    }\n                }\n            }\n        }\n\n        return obj\n    }\n    var rinput = /select|input|button|textarea/i\n    var rcheckbox = /radio|checkbox/\n    var rline = /\\r?\\n/g\n    function trimLine(val) {\n        return val.replace(rline, \"\\r\\n\")\n    }\n    //表单元素变字符串, form为一个元素节点\n    avalon.serialize = function(form) {\n        var json = {};\n        // 不直接转换form.elements，防止以下情况：   <form > <input name=\"elements\"/><input name=\"test\"/></form>\n        Array.prototype.filter.call(form.getElementsByTagName(\"*\"), function(el) {\n            if (rinput.test(el.nodeName) && el.name && !el.disabled) {\n                return rcheckbox.test(el.type) ? el.checked : true //只处理拥有name并且没有disabled的表单元素\n            }\n        }).forEach(function(el) {\n            var val = avalon(el).val()\n            val = Array.isArray(val) ? val.map(trimLine) : trimLine(val)\n            var name = el.name\n            if (name in json) {\n                if (Array.isArray(val)) {\n                    json[name].push(val)\n                } else {\n                    json[name] = [json[name], val]\n                }\n            } else {\n                json[name] = val\n            }\n        })\n        return avalon.param(json, false) // 名值键值对序列化,数组元素名字前不加 []\n    }\n\n    var transports = avalon.ajaxTransports = {\n        xhr: {\n            //发送请求\n            request: function() {\n                var self = this;\n                var opts = this.options;\n                var transport = this.transport = new avalon.xhr;\n                transport.open(opts.type, opts.url, opts.async, opts.username, opts.password)\n                if (this.mimeType && transport.overrideMimeType) {\n                    transport.overrideMimeType(this.mimeType)\n                }\n                //IE6下，如果transport中没有withCredentials，直接设置会报错\n                if (opts.crossDomain && \"withCredentials\" in transport) {\n                    transport.withCredentials = true\n                }\n\n                /*\n                 * header 中设置 X-Requested-With 用来给后端做标示：\n                 * 这是一个 ajax 请求。\n                 *\n                 * 在 Chrome、Firefox 3.5+ 和 Safari 4+ 下，\n                 * 在进行跨域请求时设置自定义 header，会触发 preflighted requests，\n                 * 会预先发送 method 为 OPTIONS 的请求。\n                 *\n                 * 于是，如果跨域，禁用此功能。\n                 */\n                if (!opts.crossDomain) {\n                    this.requestHeaders[\"X-Requested-With\"] = \"XMLHttpRequest\"\n                }\n\n                for (var i in this.requestHeaders) {\n                    transport.setRequestHeader(i, this.requestHeaders[i] + \"\")\n                }\n\n                /*\n                 * progress\n                 */\n                if (opts.progressCallback) {\n                    // 判断是否 ie6-9\n                    var isOldIE = document.all && !window.atob;\n                    if (!isOldIE) {\n                        transport.upload.onprogress = opts.progressCallback\n                    }\n                }\n\n                var dataType = opts.dataType\n                if (\"responseType\" in transport && /^(blob|arraybuffer|text)$/.test(dataType)) {\n                    transport.responseType = dataType\n                    this.useResponseType = true\n                }\n                //必须要支持 FormData 和 file.fileList 的浏览器 才能用 xhr 发送\n                //标准规定的 multipart/form-data 发送必须用 utf-8 格式， 记得 ie 会受到 document.charset 的影响\n                transport.send(opts.hasContent && (this.formdata || this.querystring) || null)\n                //在同步模式中,IE6,7可能会直接从缓存中读取数据而不会发出请求,因此我们需要手动发出请求\n\n                if (!opts.async || transport.readyState === 4) {\n                    this.respond()\n                } else {\n                    if (useOnload) { //如果支持onerror, onload新API\n                        transport.onload = transport.onerror = function(e) {\n                            this.readyState = 4 //IE9+\n                            this.status = e.type === \"load\" ? 200 : 500\n                            self.respond()\n                        }\n                    } else {\n                        transport.onreadystatechange = function() {\n                            self.respond()\n                        }\n                    }\n                }\n            },\n            //用于获取原始的responseXMLresponseText 修正status statusText\n            //第二个参数为1时中止清求\n            respond: function(event, forceAbort) {\n                var transport = this.transport\n                if (!transport) {\n                    return\n                }\n                // by zilong：避免abort后还继续派发onerror等事件\n                if (forceAbort && this.timeoutID) {\n                    clearTimeout(this.timeoutID);\n                    delete this.timeoutID\n                }\n                try {\n                    var completed = transport.readyState === 4\n                    if (forceAbort || completed) {\n                        transport.onreadystatechange = avalon.noop\n                        if (useOnload) { //IE6下对XHR对象设置onerror属性可能报错\n                            transport.onerror = transport.onload = null\n                        }\n                        if (forceAbort) {\n                            if (!completed && typeof transport.abort === \"function\") { // 完成以后 abort 不要调用\n                                transport.abort()\n                            }\n                        } else {\n                            var status = transport.status\n                            //设置responseText\n                            var text = transport.responseText\n\n                            this.responseText = typeof text === \"string\" ? text : void 0\n                            //设置responseXML\n                            try {\n                                //当responseXML为[Exception: DOMException]时，\n                                //访问它会抛“An attempt was made to use an object that is not, or is no longer, usable”异常\n                                var xml = transport.responseXML\n                                this.responseXML = xml.documentElement\n                            } catch (e) {\n                            }\n                            //设置response\n                            if (this.useResponseType) {\n                                this.response = transport.response\n                            }\n                            //设置responseHeadersString\n                            this.responseHeadersString = transport.getAllResponseHeaders()\n\n                            try { //火狐在跨城请求时访问statusText值会抛出异常\n                                var statusText = transport.statusText\n                            } catch (e) {\n                            this.error = e\n                            statusText = \"firefoxAccessError\"\n                            }\n                            //用于处理特殊情况,如果是一个本地请求,只要我们能获取数据就假当它是成功的\n                            if (!status && isLocal && !this.options.crossDomain) {\n                                status = this.responseText ? 200 : 404\n                            //IE有时会把204当作为1223\n                            } else if (status === 1223) {\n                                status = 204\n                            }\n                            this.dispatch(status, statusText)\n                        }\n                    }\n                } catch (err) {\n                // 如果网络问题时访问XHR的属性，在FF会抛异常\n                // http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)\n                if (!forceAbort) {\n                this.dispatch(500, err)\n                }\n                }\n            }\n        },\n        jsonp: {\n            preproccess: function() {\n                var opts = this.options;\n                var name = this.jsonpCallback = opts.jsonpCallback || \"avalon.jsonp\" + setTimeout(\"1\")\n                if (rjsonp.test(opts.url)) {\n                    opts.url = opts.url.replace(rjsonp, \"$1\" + name)\n                } else {\n                    opts.url = opts.url + (rquery.test(opts.url) ? \"&\" : \"?\") + opts.jsonp + \"=\" + name\n                }\n                //将后台返回的json保存在惰性函数中\n                if (name.startsWith('avalon.')) {\n                    name = name.replace(/avalon\\./, '')\n                    avalon[name] = function(json) {\n                        avalon[name] = json\n                    }\n                } else {\n                    window[name] = function(json) {\n                        window[name] = json\n                    }\n                }\n                return \"script\"\n            }\n        },\n        script: {\n            request: function() {\n                var opts = this.options;\n                var node = this.transport = DOC.createElement(\"script\")\n                if (opts.charset) {\n                    node.charset = opts.charset\n                }\n                var self = this;\n                node.onerror = node[useOnload ? \"onload\" : \"onreadystatechange\"] = function() {\n                    self.respond()\n                };\n                node.src = opts.url\n                head.insertBefore(node, head.firstChild)\n            },\n            respond: function(event, forceAbort) {\n                var node = this.transport\n                if (!node) {\n                    return\n                }\n                // by zilong：避免abort后还继续派发onerror等事件\n                if (forceAbort && this.timeoutID) {\n                    clearTimeout(this.timeoutID);\n                    delete this.timeoutID\n                }\n                var execute = /loaded|complete|undefined/i.test(node.readyState)\n                if (forceAbort || execute) {\n                    node.onerror = node.onload = node.onreadystatechange = null\n                    var parent = node.parentNode;\n                    if (parent) {\n                        parent.removeChild(node)\n                    }\n                    if (!forceAbort) {\n                        var args;\n                        if (this.jsonpCallback) {\n                            var jsonpCallback = this.jsonpCallback.startsWith('avalon.') ? avalon[this.jsonpCallback.replace(/avalon\\./, '')] : window[this.jsonpCallback]\n                            args = typeof jsonpCallback === \"function\" ? [500, \"error\"] : [200, \"success\"]\n                        } else {\n                            args = [200, \"success\"]\n                        }\n\n                        this.dispatch.apply(this, args)\n                    }\n                }\n            }\n        },\n        upload: {\n            preproccess: function() {\n                var opts = this.options, formdata\n                if (typeof opts.form.append === \"function\") { //简单判断opts.form是否为FormData\n                    formdata = opts.form;\n                    opts.contentType = '';\n                } else {\n                    formdata = new FormData(opts.form) //将二进制什么一下子打包到formdata\n                }\n                avalon.each(opts.data, function(key, val) {\n                    formdata.append(key, val) //添加客外数据\n                })\n                this.formdata = formdata\n            }\n        }\n    }\n\n\n    avalon.mix(transports.jsonp, transports.script)\n    avalon.mix(transports.upload, transports.xhr)\n\n    if (!window.FormData) {\n        var str = 'Function BinaryToArray(binary)\\r\\n\\\n                 Dim oDic\\r\\n\\\n                 Set oDic = CreateObject(\"scripting.dictionary\")\\r\\n\\\n                 length = LenB(binary) - 1\\r\\n\\\n                 For i = 1 To length\\r\\n\\\n                     oDic.add i, AscB(MidB(binary, i, 1))\\r\\n\\\n                 Next\\r\\n\\\n                 BinaryToArray = oDic.Items\\r\\n\\\n              End Function'\n        execScript(str, \"VBScript\");\n        avalon.fixAjax = function() {\n            avalon.ajaxConverters.arraybuffer = function() {\n                var body = this.tranport && this.tranport.responseBody\n                if (body) {\n                    return new VBArray(BinaryToArray(body)).toArray();\n                }\n            };\n            function createIframe(ID) {\n                var iframe = avalon.parseHTML(\"<iframe \" + \" id='\" + ID + \"'\" +\n                    \" name='\" + ID + \"'\" + \" style='position:absolute;left:-9999px;top:-9999px;'/>\").firstChild;\n                return (DOC.body || DOC.documentElement).insertBefore(iframe, null);\n            }\n            function addDataToForm(form, data) {\n                var ret = [],\n                    d, isArray, vs, i, e;\n                for (d in data) {\n                    isArray = Array.isArray(data[d]);\n                    vs = isArray ? data[d] : [data[d]];\n                    // 数组和原生一样对待，创建多个同名输入域\n                    for (i = 0; i < vs.length; i++) {\n                        e = DOC.createElement(\"input\");\n                        e.type = 'hidden';\n                        e.name = d;\n                        e.value = vs[i];\n                        form.appendChild(e);\n                        ret.push(e);\n                    }\n                }\n                return ret;\n            }\n            //https://github.com/codenothing/Pure-Javascript-Upload/blob/master/src/upload.js\n            avalon.ajaxTransports.upload = {\n                request: function() {\n                    var self = this;\n                    var opts = this.options;\n                    var ID = \"iframe-upload-\" + this.uniqueID;\n                    var form = opts.form;\n                    var iframe = this.transport = createIframe(ID);\n                    //form.enctype的值\n                    //1:application/x-www-form-urlencoded   在发送前编码所有字符（默认）\n                    //2:multipart/form-data 不对字符编码。在使用包含文件上传控件的表单时，必须使用该值。\n                    //3:text/plain  空格转换为 \"+\" 加号，但不对特殊字符编码。\n                    var backups = {\n                        target: form.target || \"\",\n                        action: form.action || \"\",\n                        enctype: form.enctype,\n                        method: form.method\n                    };\n                    var fields = opts.data ? addDataToForm(form, opts.data) : [];\n                    //必须指定method与enctype，要不在FF报错\n                    //表单包含文件域时，如果缺少 method=POST 以及 enctype=multipart/form-data，\n                    // 设置target到隐藏iframe，避免整页刷新\n                    form.target = ID;\n                    form.action = opts.url;\n                    form.method = \"POST\";\n                    form.enctype = \"multipart/form-data\";\n                    this.uploadcallback = avalon.bind(iframe, \"load\", function(event) {\n                        self.respond(event);\n                    });\n                    form.submit();\n                    //还原form的属性\n                    for (var i in backups) {\n                        form[i] = backups[i];\n                    }\n                    //移除之前动态添加的节点\n                    fields.forEach(function(input) {\n                        form.removeChild(input);\n                    });\n                },\n                respond: function(event) {\n                    var node = this.transport, child\n                    // 防止重复调用,成功后 abort\n                    if (!node) {\n                        return;\n                    }\n                    if (event && event.type === \"load\") {\n                        var doc = node.contentWindow.document;\n                        this.responseXML = doc;\n                        if (doc.body) { //如果存在body属性,说明不是返回XML\n                            this.responseText = doc.body.innerHTML;\n                            //当MIME为'application/javascript' 'text/javascript\",浏览器会把内容放到一个PRE标签中\n                            if ((child = doc.body.firstChild) && child.nodeName.toUpperCase() === 'PRE' && child.firstChild) {\n                                this.responseText = child.firstChild.nodeValue;\n                            }\n                        }\n                        this.dispatch(200, \"success\");\n                    }\n                    this.uploadcallback = avalon.unbind(node, \"load\", this.uploadcallback);\n                    delete this.uploadcallback;\n                    setTimeout(function() { // Fix busy state in FF3\n                        node.parentNode.removeChild(node);\n                    });\n                }\n            };\n            delete avalon.fixAjax;\n        };\n        avalon.fixAjax()\n    }\n    return avalon\n})\n/**\n * \n 2011.8.31\n 将会传送器的abort方法上传到avalon.XHR.abort去处理\n 修复serializeArray的bug\n 对XMLHttpRequest.abort进行try...catch\n 2012.3.31 v2 大重构,支持XMLHttpRequest Level2\n 2013.4.8 v3 大重构 支持二进制上传与下载\n http://www.cnblogs.com/heyuquan/archive/2013/05/13/3076465.html\n 2014.12.25  v4 大重构 \n 2015.3.2   去掉mmPromise\n 2015.3.13  使用加强版mmPromise\n 2015.3.17  增加 xhr 的 onprogress 回调\n 2015.12.10 处理全局对象BUG               \n */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/ui/oniui/mmRequest/mmRequest.js\n ** module id = 3\n ** module chunks = 0\n **/","define([\"avalon\"], function (avalon) {\n//chrome36的原生Promise还多了一个defer()静态方法，允许不通过传参就能生成Promise实例，\n//另还多了一个chain(onSuccess, onFail)原型方法，意义不明\n//目前，firefox24, opera19也支持原生Promise(chrome32就支持了，但需要打开开关，自36起直接可用)\n//本模块提供的Promise完整实现ECMA262v6 的Promise规范\n//2015.3.12 支持async属性\n    function ok(val) {\n        return val\n    }\n    function ng(e) {\n        throw e\n    }\n\n    function done(onSuccess) {//添加成功回调\n        return this.then(onSuccess, ng)\n    }\n    function fail(onFail) {//添加出错回调\n        return this.then(ok, onFail)\n    }\n    function defer() {\n        var ret = {};\n        ret.promise = new this(function (resolve, reject) {\n            ret.resolve = resolve\n            ret.reject = reject\n        });\n        return ret\n    }\n    var msPromise = function (executor) {\n        this._callbacks = []\n        var me = this\n        if (typeof this !== \"object\")\n            throw new TypeError(\"Promises must be constructed via new\")\n        if (typeof executor !== \"function\")\n            throw new TypeError(\"not a function\")\n\n        executor(function (value) {\n            _resolve(me, value)\n        }, function (reason) {\n            _reject(me, reason)\n        })\n    }\n    function fireCallbacks(promise, fn) {\n        if (typeof promise.async === \"boolean\") {\n            var isAsync = promise.async\n        } else {\n            isAsync = promise.async = true\n        }\n        if (isAsync) {\n            window.setTimeout(fn, 0)\n        } else {\n            fn()\n        }\n    }\n//返回一个已经处于`resolved`状态的Promise对象\n    msPromise.resolve = function (value) {\n        return new msPromise(function (resolve) {\n            resolve(value)\n        })\n    }\n//返回一个已经处于`rejected`状态的Promise对象\n    msPromise.reject = function (reason) {\n        return new msPromise(function (resolve, reject) {\n            reject(reason)\n        })\n    }\n\n    msPromise.prototype = {\n//一个Promise对象一共有3个状态：\n//- `pending`：还处在等待状态，并没有明确最终结果\n//- `resolved`：任务已经完成，处在成功状态\n//- `rejected`：任务已经完成，处在失败状态\n        constructor: msPromise,\n        _state: \"pending\",\n        _fired: false, //判定是否已经被触发\n        _fire: function (onSuccess, onFail) {\n            if (this._state === \"rejected\") {\n                if (typeof onFail === \"function\") {\n                    onFail(this._value)\n                } else {\n                    throw this._value\n                }\n            } else {\n                if (typeof onSuccess === \"function\") {\n                    onSuccess(this._value)\n                }\n            }\n        },\n        _then: function (onSuccess, onFail) {\n            if (this._fired) {//在已有Promise上添加回调\n                var me = this\n                fireCallbacks(me, function () {\n                    me._fire(onSuccess, onFail)\n                });\n            } else {\n                this._callbacks.push({onSuccess: onSuccess, onFail: onFail})\n            }\n        },\n        then: function (onSuccess, onFail) {\n            onSuccess = typeof onSuccess === \"function\" ? onSuccess : ok\n            onFail = typeof onFail === \"function\" ? onFail : ng\n            var me = this//在新的Promise上添加回调\n            var nextPromise = new msPromise(function (resolve, reject) {\n                me._then(function (value) {\n                    try {\n                        value = onSuccess(value)\n                    } catch (e) {\n                        // https://promisesaplus.com/#point-55\n                        reject(e)\n                        return\n                    }\n                    resolve(value)\n                }, function (value) {\n                    try {\n                        value = onFail(value)\n                    } catch (e) {\n                        reject(e)\n                        return\n                    }\n                    resolve(value)\n                })\n            })\n            for (var i in me) {\n                if (!personal[i]) {\n                    nextPromise[i] = me[i]\n                }\n            }\n            return nextPromise\n        },\n        \"done\": done,\n        \"catch\": fail,\n        \"fail\": fail\n    }\n    var personal = {\n        _state: 1,\n        _fired: 1,\n        _value: 1,\n        _callbacks: 1\n    }\n    function _resolve(promise, value) {//触发成功回调\n        if (promise._state !== \"pending\")\n            return;\n        if (value && typeof value.then === \"function\") {\n//thenable对象使用then，Promise实例使用_then\n            var method = value instanceof msPromise ? \"_then\" : \"then\"\n            value[method](function (val) {\n                _transmit(promise, val, true)\n            }, function (reason) {\n                _transmit(promise, reason, false)\n            });\n        } else {\n            _transmit(promise, value, true);\n        }\n    }\n    function _reject(promise, value) {//触发失败回调\n        if (promise._state !== \"pending\")\n            return\n        _transmit(promise, value, false)\n    }\n//改变Promise的_fired值，并保持用户传参，触发所有回调\n    function _transmit(promise, value, isResolved) {\n        promise._fired = true;\n        promise._value = value;\n        promise._state = isResolved ? \"fulfilled\" : \"rejected\"\n        fireCallbacks(promise, function () {\n            promise._callbacks.forEach(function (data) {\n                promise._fire(data.onSuccess, data.onFail);\n            })\n        })\n    }\n    function _some(any, iterable) {\n        iterable = Array.isArray(iterable) ? iterable : []\n        var n = 0, result = [], end\n        return new msPromise(function (resolve, reject) {\n            // 空数组直接resolve\n            if (!iterable.length)\n                resolve(result)\n            function loop(a, index) {\n                a.then(function (ret) {\n                    if (!end) {\n                        result[index] = ret//保证回调的顺序\n                        n++\n                        if (any || n >= iterable.length) {\n                            resolve(any ? ret : result)\n                            end = true\n                        }\n                    }\n                }, function (e) {\n                    end = true\n                    reject(e)\n                })\n            }\n            for (var i = 0, l = iterable.length; i < l; i++) {\n                loop(iterable[i], i)\n            }\n        })\n    }\n\n    msPromise.all = function (iterable) {\n        return _some(false, iterable)\n    }\n    msPromise.race = function (iterable) {\n        return _some(true, iterable)\n    }\n    msPromise.defer = defer\n\n\n\n    avalon.Promise = msPromise\n    var nativePromise = window.Promise\n    if (/native code/.test(nativePromise)) {\n        nativePromise.prototype.done = done\n        nativePromise.prototype.fail = fail\n        if (!nativePromise.defer) { //chrome实现的私有方法\n            nativePromise.defer = defer\n        }\n    }\n    return window.Promise = nativePromise || msPromise\n\n})\n//https://github.com/ecomfe/er/blob/master/src/Deferred.js\n//http://jser.info/post/77696682011/es6-promises\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/ui/oniui/mmPromise/mmPromise.js\n ** module id = 4\n ** module chunks = 0\n **/","avalon.define({\n    $id: \"editor\",\n    tpl: ''\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/pages/editor/vmodel.js\n ** module id = 5\n ** module chunks = 0\n **/","require('./vmodel.js');\n\navalon.templateCache['header'] = require('./view.html');\navalon.vmodels.header.tpl = \"header\";\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/pages/editor/header/index.js\n ** module id = 6\n ** module chunks = 0\n **/","avalon.define({\n    $id: \"header\",\n    tpl: \"\",\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/pages/editor/header/vmodel.js\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = \"<ul class=\\\"header-holder list-inline fl\\\">\\n\\t<li class=\\\"go-to-dashboard\\\"><a href=\\\"./dashboard\\\"><span class=\\\"glyphicon glyphicon-home\\\"></span></a></li>\\n\\t<li><a>创建一个A/B测试</a></li>\\n</ul>\\n<div class=\\\"btn-group btn-group-sm version-switch\\\" role=\\\"group\\\" aria-label=\\\"...\\\">\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\">桌面 <span class=\\\"glyphicon glyphicon-blackboard\\\"></span></button>\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default active\\\">移动 <span class=\\\"glyphicon glyphicon-phone\\\"></span></button>\\n\\t</div>\\n\\n<ul class=\\\"header-holder list-inline fr\\\">\\n\\t<li><span class=\\\"glyphicon glyphicon-question-sign\\\"></span></li>\\n\\t<li><span class=\\\"glyphicon glyphicon-share-alt flipx\\\"></span></li>\\n\\t<li><span class=\\\"glyphicon glyphicon-share-alt\\\"></span></li>\\n\\t<li>设置 <span class=\\\"glyphicon glyphicon-cog\\\"></span></li>\\n\\t<li>保存 <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span></li>\\n\\t<li>预览 <span class=\\\"glyphicon glyphicon-eye-open\\\"></span></li>\\n\\t<li class=\\\"publish\\\">发布 <span class=\\\"glyphicon glyphicon-send\\\"></span></li>\\n</ul>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/pages/editor/header/view.html\n ** module id = 8\n ** module chunks = 0\n **/","require('./vmodel.js');\n\navalon.templateCache['toolbar'] = require('./view.html');\navalon.vmodels.toolbar.tpl = \"toolbar\";\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/pages/editor/toolbar/index.js\n ** module id = 9\n ** module chunks = 0\n **/","avalon.define({\n    $id: \"toolbar\",\n    tpl: \"\",\n    tools:[\n    \t{\n    \t\tname:'版块',\n    \t\tstyle:'modal-window',\n    \t\taction:function(){\n    \t\t\tavalon.vmodels.page.add_section();\n    \t\t}\n    \t},\n    \t{\n    \t\tname:'图片',\n    \t\tstyle:'picture',\n    \t\taction:function(){\n                avalon.vmodels.page.add_element(\"image\");\n    \t\t}\n    \t},\n    \t{\n    \t\tname:'文字',\n    \t\tstyle:'font',\n    \t\taction:function(){\n                avalon.vmodels.page.add_element(\"text\");\n    \t\t}\n    \t},\n    \t{\n    \t\tname:'按钮',\n    \t\tstyle:'expand',\n    \t\taction:function(){\n                avalon.vmodels.page.add_element(\"button\");\n    \t\t}\n    \t},\n    \t{\n    \t\tname:'视频',\n    \t\tstyle:'facetime-video',\n    \t\taction:function(){\n                avalon.vmodels.page.add_element(\"video\");\n    \t\t}\n    \t},\n        /*\n    \t{\n    \t\tname:'形状',\n    \t\t'style':'stop',\n    \t\taction:function(){\n\n    \t\t}\n    \t},\n        */\n    \t{\n    \t\tname:'表单',\n    \t\tstyle:'edit',\n    \t\taction:function(){\n                avalon.vmodels.page.add_element(\"form\");\n    \t\t}\n    \t}\n    ],\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/pages/editor/toolbar/vmodel.js\n ** module id = 10\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"toolbar-header\\\">组件</div>\\n<div class=\\\"toolbar-body\\\">\\n\\t<div ms-repeat-el=\\\"tools\\\" class=\\\"tool\\\" ms-click=\\\"el.action\\\">\\n\\t\\t<span class=\\\"glyphicon\\\" ms-class=\\\"glyphicon-{{el.style}}\\\"></span>\\n\\t\\t<div class=\\\"tool-name\\\">{{el.name}}</div>\\n\\t</div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/pages/editor/toolbar/view.html\n ** module id = 11\n ** module chunks = 0\n **/","require('../../../ui/oniui/resizable/avalon.resizable');\nrequire('./widget/pageitem');\nrequire('./vmodel.js');\n\navalon.templateCache['workspace'] = require('./view.html');\navalon.vmodels.workspace.tpl = \"workspace\";\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/pages/editor/workspace/index.js\n ** module id = 12\n ** module chunks = 0\n **/","define([\"../draggable/avalon.draggable\"], function(avalon) {\n\n\n    var draggable = avalon.bindingHandlers.draggable;\n    var resizable = avalon.bindingHandlers.resizable = function(data, vmodels) {\n        var args = data.value.match(avalon.rword) || [\"$\", \"resizable\"]\n        var ID = args[0].trim(), opts = args[1], model, vmOptions;\n        if (ID && ID != \"$\") {\n            model = avalon.vmodels[ID]//如果指定了此VM的ID\n            if (!model) {\n                return\n            }\n        }\n\n        if (!model) {//如果使用$或绑定值为空，那么就默认取最近一个VM，没有拉倒\n            model = vmodels.length ? vmodels[0] : null\n        }\n        var fnObj = model || {}\n        if (model && typeof model[opts] === \"object\") {//如果指定了配置对象，并且有VM\n            vmOptions = model[opts]\n            if (vmOptions.$model) {\n                vmOptions = vmOptions.$model\n            }\n            fnObj = vmOptions\n        }\n        var element = data.element\n        element.removeAttribute(\"ms-resizable\")\n        var options = avalon.mix({}, resizable.defaults, vmOptions || {}, avalon.getWidgetData(element, \"resizable\"));\n        //修正drag,stop为函数\n        \"stop,start,resize,drag\".replace(avalon.rword, function(name) {\n            var method = options[name]\n            if (typeof method === \"string\") {\n                if (typeof fnObj[method] === \"function\") {\n                    options[name] = fnObj[method]\n                } else {\n                    options[name] = avalon.noop\n                }\n            }\n        })\n        options.handles = options.handles.match(avalon.rword) || [\"all\"];\n        options._aspectRatio = typeof options.aspectRatio === \"number\"\n\n        var target = avalon(element)\n        target.bind(\"mousemove\", function(e) {\n            if (options.started)\n                return;\n\n            var dir = getDirection(e, target, options)\n            options._cursor = target.css(\"cursor\"); //保存原来的光标样式\n            if (dir === \"\") {\n                target.css(\"cursor\", \"default\");\n            } else {\n                target.css(\"cursor\", dir + \"-resize\");\n            }\n        })\n\n        target.bind(\"mouseleave\", function(e) {\n            target.css(\"cursor\", options._cursor); //还原光标样式\n            delete options._cursor\n        })\n        var _drag = options.drag || avalon.noop\n        var body = document.body\n        //在dragstart回调中,我们通过draggable已经设置了\n        //data.startPageX = event.pageX;    data.startPageY = event.pageY;\n        //data.originalX = offset.left; data.originalY = offset.top;\n        options.beforeStart = function(event, data) {\n            var target = data.$element;\n            if(_drag === avalon.noop){\n                data.dragX = data.dragY = false\n            }\n            var dir = getDirection(event, target, data);\n            if (dir === \"\")\n                return;\n            avalon.mix(data, {\n                dir: dir,\n                startResizeLeft: getCssValue(target, \"left\"),\n                startResizeTop: getCssValue(target, \"top\"),\n                startResizeWidth: target.width(),\n                startResizeHeight: target.height()\n            })\n            //开始缩放时的位置大小\n            \"startResizeLeft,startResizeTop,startResizeWidth,startResizeHeight\".replace(avalon.rword, function(word) {\n                data[word.replace(\"startR\", \"r\")] = data[word];\n            })\n            //等比例缩放\n            data.aspectRatio = data._aspectRatio ? data.aspectRatio : ((data.startResizeWidth / data.startResizeHeight) || 1);\n            event.type = \"resizestart\";\n            //data.start.call(target[0], event, data); //触发用户回调\n\n            if(dir){\n                data.dragX = data.dragY = false\n            }\n            avalon(body).css('cursor', dir + '-resize');\n        }\n        options.drag = function(event, data) {\n            if (data.dir) {\n                refresh(event, data.$element, data);\n                event.type = \"resize\";\n                data.resize.call(data.element, event, data); //触发用户回调\n            }else if (\"_cursor\" in options) {\n                _drag.call(data.element, event, data); //触发用户回调\n            }\n        }\n        options.beforeStop = function(event, data) {\n            if (data.dir) {\n                var target = data.$element;\n                refresh(event, target, data);\n                delete data.dir;\n                event.type = \"resizeend\";\n                //   data.stop.call(target[0], event, data); //触发用户回调\n                avalon(body).css(\"cursor\", \"default\");\n            }\n        }\n        data.value = \"\"\n        data.draggable = options\n\n        draggable(data, vmodels)\n\n    }\n    resizable.defaults = {\n        handles: \"n,e,s,w,ne,se,sw,nw\",\n        maxHeight: 10000,\n        maxWidth: 10000,\n        minHeight: 10,\n        minWidth: 10,\n        cursor: false,\n        edge: 5,\n        start: avalon.noop,\n        resize: avalon.noop,\n        stop: avalon.noop\n    }\n    /**\n     * 用于修正拖动元素靠边边缘的区域的鼠标样式\n     * @param {Event} e\n     * @param {Mass} target\n     * @param {Object} data 经过处理的配置对象\n     */\n\n    function getDirection(e, target, data) {\n        var dir = \"\";\n        var offset = target.offset();\n        var width = target[0].offsetWidth;\n        var height = target[0].offsetHeight;\n        var edge = data.edge;\n        if (e.pageY > offset.top && e.pageY < offset.top + edge) {\n            dir += \"n\";\n        } else if (e.pageY < offset.top + height && e.pageY > offset.top + height - edge) {\n            dir += \"s\";\n        }\n        if (e.pageX > offset.left && e.pageX < offset.left + edge) {\n            dir += \"w\";\n        } else if (e.pageX < offset.left + width && e.pageX > offset.left + width - edge) {\n            dir += \"e\";\n        }\n        for (var i = 0, handle; handle = data.handles[i++]; ) {\n            if (handle === \"all\" || handle === dir) {\n                return dir;\n            }\n        }\n        return \"\";\n    }\n\n    function getCssValue(el, css) { //对样式值进行处理,强制转数值\n        var val = parseInt(el.css(css), 10);\n        if (isNaN(val)) {\n            return 0;\n        } else {\n            return val;\n        }\n    }\n\n    function refresh(event, target, data) { //刷新缩放元素\n        var b = data\n        if (data._aspectRatio || event.shiftKey) {\n            var aspest = true,\n                    pMinWidth = b.minHeight * data.aspectRatio,\n                    pMinHeight = b.minWidth / data.aspectRatio,\n                    pMaxWidth = b.maxHeight * data.aspectRatio,\n                    pMaxHeight = b.maxWidth / data.aspectRatio;\n\n            if (pMinWidth > b.minWidth) {\n                b.minWidth = pMinWidth;\n            }\n            if (pMinHeight > b.minHeight) {\n                b.minHeight = pMinHeight;\n            }\n            if (pMaxWidth < b.maxWidth) {\n                b.maxWidth = pMaxWidth;\n            }\n            if (pMaxHeight < b.maxHeight) {\n                b.maxHeight = pMaxHeight;\n            }\n        }\n\n\n        if (data.dir.indexOf(\"e\") !== -1) {\n            var width = data.startResizeWidth + event.pageX - data.startPageX;\n            width = Math.min(Math.max(width, b.minWidth), b.maxWidth);\n            data.resizeWidth = width;\n            if (aspest) {\n                data.resizeHeight = data.startResizeHeight + (event.pageX - data.startPageX) / data.aspectRatio;\n            }\n        }\n        if (data.dir.indexOf(\"s\") !== -1) {\n            var height = data.startResizeHeight + event.pageY - data.startPageY;\n            height = Math.min(Math.max(height, b.minHeight), b.maxHeight);\n            data.resizeHeight = height;\n            if (aspest) {\n                data.resizeWidth = data.startResizeWidth + (event.pageY - data.startPageY) * data.aspectRatio;\n            }\n        }\n        if (data.dir.indexOf(\"w\") !== -1) {\n            data.resizeWidth = data.startResizeWidth - event.pageX + data.startPageX;\n            if (data.resizeWidth >= b.minWidth && data.resizeWidth <= b.maxWidth) {\n                data.resizeLeft = data.startResizeLeft + event.pageX - data.startPageX;\n                if (aspest) {\n                    data.resizeHeight = data.startResizeHeight - (event.pageX - data.startPageX) / data.aspectRatio;\n\n                    if(data.dir.indexOf(\"s\") === -1) {\n                        data.resizeTop = data.startResizeTop + (event.pageX - data.startPageX) / data.aspectRatio;\n                    }\n                }\n            }\n        }\n        if (data.dir.indexOf(\"n\") !== -1) {\n            data.resizeHeight = data.startResizeHeight - event.pageY + data.startPageY;\n            if (data.resizeHeight >= b.minHeight && data.resizeHeight <= b.maxHeight) {\n                data.resizeTop = data.startResizeTop + event.pageY - data.startPageY;\n                if (aspest) {\n                    data.resizeWidth = data.startResizeWidth - (event.pageY - data.startPageY) * data.aspectRatio;\n\n                    if(data.dir.indexOf(\"e\") === -1){\n                        data.resizeLeft = data.startResizeLeft + (event.pageY - data.startPageY) * data.aspectRatio;\n                    }\n                }\n            }\n        }\n\n        var obj = {\n            left: data.resizeLeft,\n            top: data.resizeTop,\n            width: data.resizeWidth,\n            height: data.resizeHeight\n        }\n        for (var i in obj) {\n            target.css(i, obj[i])\n        }\n    }\n    return avalon\n})\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/ui/oniui/resizable/avalon.resizable.js\n ** module id = 13\n ** module chunks = 0\n **/","define([\"avalon\"], function(avalon) {\n    var defaults = {\n        ghosting: false,\n        //是否影子拖动，动态生成一个元素，拖动此元素，当拖动结束时，让原元素到达此元素的位置上,\n        delay: 0,\n        axis: 'xy',\n        started: true,\n        start: avalon.noop,\n        beforeStart: avalon.noop,\n        drag: avalon.noop,\n        beforeStop: avalon.noop,\n        stop: avalon.noop,\n        scrollPlugin: true,\n        scrollSensitivity: 20,\n        scrollSpeed: 20\n    };\n\n    var styleEl = document.getElementById('avalonStyle');\n    //拖动时禁止文字被选中，禁止图片被拖动\n    var cssText = '.ui-helper-global-drag *{ -webkit-touch-callout: none;' + '-khtml-user-select: none;' + '-moz-user-select: none;' + '-ms-user-select: none;' + 'user-select: none;}' + '.ui-helper-global-drag img{-webkit-user-drag:none; ' + 'pointer-events:none;}';\n    try {\n        styleEl.innerHTML += cssText;\n    } catch (e) {\n        styleEl.styleSheet.cssText += cssText;\n    }\n    var body;\n    var ua = navigator.userAgent;\n    var isAndroid = /Android/i.test(ua);\n    var isBlackBerry = /BlackBerry/i.test(ua);\n    var isWindowPhone = /IEMobile/i.test(ua);\n    var isIOS = /iPhone|iPad|iPod/i.test(ua);\n    var isMobile = isAndroid || isBlackBerry || isWindowPhone || isIOS;\n    if (!isMobile) {\n        var dragstart = 'mousedown';\n        var drag = 'mousemove';\n        var dragstop = 'mouseup';\n    } else {\n        dragstart = 'touchstart';\n        drag = 'touchmove';\n        dragstop = 'touchend';\n    }\n\n    function getOptions(opts, vmodels) {\n        var i = 0, l = vmodels.length;\n        for (; i < l; i++) {\n            if (typeof vmodels[i][opts] === 'object') {\n                return vmodels[i];\n            }\n        }\n        return vmodels[0];\n    }\n\n    var draggable = avalon.bindingHandlers.draggable = function (data, vmodels) {\n            var args = data.value.match(avalon.rword) || [];\n            var ID = args[0] || '$';\n            var opts = args[1] || 'draggable';\n            var model, vmOptions, optionsData;\n            if (ID != '$') {\n                model = avalon.vmodels[ID];\n                //如果指定了此VM的ID\n                if (!model) {\n                    return;\n                }\n            }\n            data.element.removeAttribute('ms-draggable');\n\n            if (!model) {\n                //如果使用$或绑定值为空，那么就默认取最近一个VM，没有拉倒\n                // model = vmodels.length ? vmodels[0] : null;\n                model = vmodels.length ? getOptions(opts, vmodels) : null;\n            }\n            var fnObj = model || {};\n            if (model && typeof model[opts] === 'object') {\n                //如果指定了配置对象，并且有VM\n                vmOptions = model[opts];\n                if (vmOptions.$model) {\n                    vmOptions = vmOptions.$model;\n                }\n                fnObj = vmOptions;\n            }\n            var element = data.element;\n            var $element = avalon(element);\n            var options = avalon.mix({}, defaults, vmOptions || {}, data[opts] || {}, avalon.getWidgetData(element, 'draggable'));\n            //修正drag,stop为函数\n            'drag,stop,start,beforeStart,beforeStop'.replace(avalon.rword, function (name) {\n                var method = options[name];\n                if (typeof method === 'string') {\n                    if (typeof fnObj[method] === 'function') {\n                        options[name] = fnObj[method];\n                    }\n                }\n            });\n            if (options.axis !== '' && !/^(x|y|xy)$/.test(options.axis)) {\n                options.axis = 'xy';\n            }\n            body = document.body;\n            //因为到这里时，肯定已经domReady\n            $element.bind(dragstart, function (e) {\n                stopPropagation(e)\n\n                var data = avalon.mix({}, options, {\n                        element: element,\n                        $element: $element,\n                        pageX: getPosition(e, 'X'),\n                        //相对于页面的坐标, 会改动\n                        pageY: getPosition(e, 'Y'),\n                        //相对于页面的坐标，会改动\n                        marginLeft: parseFloat($element.css('marginLeft')) || 0,\n                        marginTop: parseFloat($element.css('marginTop')) || 0\n                    });\n                data.startPageX = data.pageX;\n                //一次拖放只赋值一次\n                data.startPageY = data.pageY;\n                //一次拖放只赋值一次\n                options.axis.replace(/./g, function (a) {\n                    data['drag' + a.toUpperCase()] = true;\n                });\n                if (!data.dragX && !data.dragY) {\n                    data.started = false;\n                }\n                //在处理手柄拖动前做些事情\n                if (typeof options.beforeStart === 'function') {\n                    options.beforeStart.call(data.element, e, data);\n                }\n                if (data.handle && fnObj) {\n                    // 实现手柄拖动\n                    var handle = fnObj[data.handle];\n                    handle = typeof handle === 'function' ? handle : data.handle;\n                    if (typeof handle === 'function') {\n                        var checked = handle.call(element, e, data);\n                        //要求返回一节点\n                        if (checked && checked.nodeType === 1) {\n                            if (!element.contains(checked)) {\n                                return;    // 不能返回 false，这会阻止文本被选择\n                            }\n                        } else {\n                            return;\n                        }\n                    }\n                }\n                fixUserSelect();\n                var position = $element.css('position');\n                //如果原元素没有被定位\n                if (!/^(?:r|a|f)/.test(position)) {\n                    element.style.position = 'relative';\n                    element.style.top = '0px';\n                    element.style.left = '0px';\n                }\n                if (options.delay && isFinite(options.delay)) {\n                    data.started = false;\n                    setTimeout(function () {\n                        data.started = true;\n                    }, options.delay);\n                }\n                var startOffset = $element.offset();\n                if (options.ghosting) {\n                    var clone = element.cloneNode(true);\n                    avalon(clone).css('opacity', 0.7).width(element.offsetWidth).height(element.offsetHeight);\n                    data.clone = clone;\n                    if (position !== 'fixed') {\n                        clone.style.position = 'absolute';\n                        clone.style.top = startOffset.top - data.marginTop + 'px';\n                        clone.style.left = startOffset.left - data.marginLeft + 'px';\n                    }\n                    body.appendChild(clone);\n                }\n                var target = avalon(data.clone || data.element);\n                //拖动前相对于offsetParent的坐标\n                data.startLeft = parseFloat(target.css('left'));\n                data.startTop = parseFloat(target.css('top'));\n                //拖动后相对于offsetParent的坐标\n                //如果是影子拖动，代理元素是绝对定位时，它与原元素的top, left是不一致的，因此当结束拖放时，不能直接将改变量赋给原元素\n                data.endLeft = parseFloat($element.css('left')) - data.startLeft;\n                data.endTop = parseFloat($element.css('top')) - data.startTop;\n                data.clickX = data.pageX - startOffset.left;\n                //鼠标点击的位置与目标元素左上角的距离\n                data.clickY = data.pageY - startOffset.top;\n                //鼠标点击的位置与目标元素左上角的距离\n                setContainment(options, data);\n\n                // 处理containment滚动\n                if(data.originContainment === \"parent\"){\n                    var container = elem = data.element.parentNode\n                    data.scrollOffsetTop = avalon(container).offset().top\n                }\n\n                //修正containment\n                draggable.dragData = data;\n                //决定有东西在拖动\n                'start,drag,beforeStop,stop'.replace(avalon.rword, function (name) {\n                    //console.log(options[name])\n                    draggable[name] = [options[name]];\n                });\n                draggable.plugin.call('start', e, data);\n            });\n        };\n    var xy2prop = {\n            'X': 'Left',\n            'Y': 'Top'\n        };\n    //插件系统\n    draggable.dragData = {};\n    draggable.start = [];\n    draggable.drag = [];\n    draggable.stop = [];\n    draggable.beforeStop = [];\n    draggable.plugin = {\n        add: function (name, set) {\n            for (var i in set) {\n                var fn = set[i];\n                if (typeof fn === 'function' && Array.isArray(draggable[i])) {\n                    fn.isPlugin = true;\n                    fn.pluginName = name + 'Plugin';\n                    draggable[i].push(fn);\n                }\n            }\n        },\n        call: function (name, e, data) {\n            var array = draggable[name];\n            if (Array.isArray(array)) {\n                array.forEach(function (fn) {\n                    //用户回调总会执行，插件要看情况\n                    if (typeof fn.pluginName === 'undefined' ? true : data[fn.pluginName]) {\n                        fn.call(data.element, e, data);\n                    }\n                });\n            }\n            if (name === 'stop') {\n                for (var i in draggable) {\n                    array = draggable[i];\n                    if (Array.isArray(array)) {\n                        array.forEach(function (fn) {\n                            if (!fn.isPlugin) {\n                                // 用户回调都是一次性的，插件的方法永远放在列队中\n                                avalon.Array.remove(array, fn);\n                            }\n                        });\n                    }\n                }\n            }\n        }\n    };\n    //统一处理拖动的事件\n    var lockTime = new Date() - 0, minTime = document.querySelector ? 12 : 30;\n    avalon(document).bind(drag, function (e) {\n        stopPropagation(e)\n\n        var time = new Date() - lockTime;\n        if (time > minTime) {\n            //减少调用次数，防止卡死IE6-8\n            lockTime = time;\n            var data = draggable.dragData;\n            if (data.started === true) {\n                //fix touchmove bug;\n                //IE 在 img 上拖动时默认不能拖动（不触发 mousemove，mouseup 事件，mouseup 后接着触发 mousemove ...）\n                //防止 html5 draggable 元素的拖放默认行为 (选中文字拖放)\n                e.preventDefault();\n                //使用document.selection.empty()来清除选择，会导致捕获失败\n                var element = data.clone || data.element;\n                setPosition(e, element, data, 'X');\n                setPosition(e, element, data, 'Y');\n                draggable.plugin.call('drag', e, data);\n            }\n        }\n    });\n\n    //统一处理拖动结束的事件\n    avalon(document).bind(dragstop, function (e) {\n        stopPropagation(e)\n\n        var data = draggable.dragData;\n        if (data.started === true) {\n            restoreUserSelect();\n            var element = data.element;\n            draggable.plugin.call('beforeStop', e, data);\n            if (data.dragX) {\n                setPosition(e, element, data, 'X', true);\n            }\n            if (data.dragY) {\n                setPosition(e, element, data, 'Y', true);\n            }\n            if (data.clone) {\n                body.removeChild(data.clone);\n            }\n            draggable.plugin.call('stop', e, data);\n            draggable.dragData = {};\n        }\n    });\n    function getPosition(e, pos) {\n        var page = 'page' + pos;\n        return isMobile ? e.changedTouches[0][page] : e[page];\n    }\n    function setPosition(e, element, data, pos, end) {\n        var page = getPosition(e, pos);\n        if (data.containment) {\n            var min = pos === 'X' ? data.containment[0] : data.containment[1];\n            var max = pos === 'X' ? data.containment[2] : data.containment[3];\n            var check = page - (pos === 'X' ? data.clickX : data.clickY);\n            if (check < min) {\n                page += Math.abs(min - check);\n            } else if (check > max) {\n                page -= Math.abs(max - check);\n            }\n        }\n\n        // 处理containment滚动\n        if(data.originContainment === \"parent\" && pos === \"Y\"){\n            var container = elem = data.element.parentNode\n            page -= avalon(container).offset().top - data.scrollOffsetTop\n        }\n\n        data['page' + pos] = page;\n        //重设pageX, pageY\n        var Prop = xy2prop[pos];\n        var prop = Prop.toLowerCase();\n        var number = data['start' + Prop] + page - data['startPage' + pos] + (end ? data['end' + Prop] : 0);\n        data[prop] = number;\n        if (data['drag' + pos]) {\n            //保存top, left\n            element.style[prop] = number + 'px';\n        }\n    }\n    var rootElement = document.documentElement;\n    var fixUserSelect = function () {\n        avalon(rootElement).addClass('ui-helper-global-drag');\n    };\n    var restoreUserSelect = function () {\n        avalon(rootElement).removeClass('ui-helper-global-drag');\n    };\n    if (window.VBArray && !('msUserSelect' in rootElement.style)) {\n        var _ieSelectBack;\n        //fix IE6789\n        function returnFalse() {\n            var e = window.event || {};\n            e.returnValue = false;\n        }\n        fixUserSelect = function () {\n            _ieSelectBack = body.onselectstart;\n            body.onselectstart = returnFalse;\n        };\n        restoreUserSelect = function () {\n            body.onselectstart = _ieSelectBack;\n        };\n    }\n    function setContainment(o, data) {\n        if (!o.containment) {\n            if (Array.isArray(data.containment)) {\n                return;\n            }\n            data.containment = null;\n            return;\n        }\n        var elemWidth = data.$element.width();\n        var elemHeight = data.$element.height();\n        if (o.containment === 'window') {\n            var $window = avalon(window);\n            //左， 上， 右， 下\n            data.containment = [\n                $window.scrollLeft(),\n                $window.scrollTop(),\n                $window.scrollLeft() + $window.width() - data.marginLeft - elemWidth,\n                $window.scrollTop() + $window.height() - data.marginTop - elemHeight\n            ];\n            return;\n        }\n        if (o.containment === 'document') {\n            data.containment = [\n                0,\n                0,\n                avalon(document).width() - data.marginLeft,\n                avalon(document).height() - data.marginTop\n            ];\n            return;\n        }\n        if (Array.isArray(o.containment)) {\n            var a = o.containment;\n            data.containment = [\n                a[0],\n                a[1],\n                a[2] - elemWidth,\n                a[3] - elemHeight\n            ];\n            return;\n        }\n        if (o.containment === 'parent' || o.containment.charAt(0) === '#') {\n            var elem;\n            if (o.containment === 'parent') {\n                data.originContainment = 'parent'\n                elem = data.element.parentNode;\n            } else {\n                elem = document.getElementById(o.containment.slice(1));\n            }\n            if (elem) {\n                var $offset = avalon(elem).offset();\n                data.containment = [\n                    $offset.left + data.marginLeft,\n                    //如果元素设置了marginLeft，设置左边界时需要考虑它\n                    $offset.top + data.marginTop,\n                    $offset.left + elem.offsetWidth - data.marginLeft - elemWidth,\n                    $offset.top + elem.offsetHeight - data.marginTop - elemHeight\n                ];\n            }\n        }\n    }\n\n    function stopPropagation(event) {\n    \tif (event.stopPropagation) {\n    \t\tevent.stopPropagation();\n    \t} else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {\n    \t\tevent.cancelBubble = true;\n    \t}\n    }\n\n    return avalon\n})\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/ui/oniui/draggable/avalon.draggable.js\n ** module id = 14\n ** module chunks = 0\n **/","\ndefine([\"../../../../ui/oniui/resizable/avalon.resizable\"],function(avalon){\n    //var draggable = avalon.bindingHandlers.draggable;\n    var resizable = avalon.bindingHandlers.resizable;\n    var pageitem = avalon.bindingHandlers.pageitem = function(data, vmodels) {\n        var element = data.element;\n        var target = avalon(data.element);\n        console.log(element.id);\n        target.bind(\"click\",function(e){\n            target.css(\"outline\",\"1px solid #ccc\");\n        });\n        resizable(data,vmodels);\n    }\n    return avalon;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/pages/editor/workspace/widget/pageitem.js\n ** module id = 15\n ** module chunks = 0\n **/","avalon.define({\n    $id: \"workspace\",\n    tpl: \"\",\n});\n\nvar page = avalon.define({\n    $id: \"page\",\n    \n    //页面板块，待Ajax加载进来\n    sections:[],\n    \n    //页面板块的resizable配置\n    $section_resizable:{\n        handles:\"s\",\n        minHeight:30,\n        edge:15,\n        stop:function(){\n            page['sections'][this.id]['style']['height'] = this.style.height;\n        }\n    },\n    \n    //鼠标移入板块时显示操作按钮，移出时隐藏\n    section_operation_toggle: function(section_id){\n        //console.log(page['sections'].first());\n    },\n\n    //添加页面板块\n    add_section: function(){\n        //temp = page.sections;\n        //console.log(temp);\n        page_data.push({\n            style:{\"background\":\"#990\",\"height\":\"100px\"},\n            elements:{}\n        });\n        page.sections = page_data;\n    },\n\n    //添加页面元素\n    add_element: function(type, options){\n        page.sections = {\n            \"bid\":{\n                style:{\"background\":\"#900\",\"height\":\"500px\"},\n            }\n        }\n        console.log(page.sections);\n    }\n});\n\nvar page_data = [\n    {\n        style:{\"background\":\"#900\",\"height\":\"200px\"},\n        elements:{\n            \"bifsdc\":{\n                type:\"text\",\n                content:\"wdfsdf\",\n                style:\"left:200px;top:40px;width:200px\",\n                zindex:100\n            },\n            \"sdf23d\":{\n                type:\"image\",\n                src:\"fsd.gif\",\n                style:\"\",\n                zindex:101\n            },\n            \"fgh24g\":{\n                type:\"button\",\n                style:\"background:#990\",\n                zindex:102\n            },\n            \"nrgs13\":{\n                type:\"video\",\n                style:\"\",\n                zindex:103\n            },\n            \"bwdkfk\":{\n                type:\"form\",\n                style:\"\",\n                zindex:105\n            }\n        },\n    },\n\n    {\n        style:{\"background-color\":\"red\",\"height\":\"300px\"},\n        elements:{\n\n        },\n    },\n\n    {\n        style:{\"background-color\":\"red\",\"height\":\"300px\"},\n        elements:{\n\n        },\n    }\n];\n\npage.sections = page_data;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/pages/editor/workspace/vmodel.js\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = \"<div ms-controller=\\\"page\\\">\\n\\t<div ms-repeat-section=\\\"sections\\\" ms-mouseenter=\\\"section_operation_toggle($index)\\\" ms-mouseleave=\\\"section_operation_toggle($index)\\\" ms-attr-id=\\\"$index\\\" style=\\\"top:0px; border-bottom:1px dashed #ccc;\\\" ms-css-height=\\\"{{section.style.height}}\\\" ms-css-background=\\\"{{section.style.background}}\\\" ms-resizable=\\\"page,$section_resizable\\\" >\\n\\t\\t<div class=\\\"editable-area\\\">\\n\\t\\t\\t{{section.style.height}}\\n\\t\\t\\t<div ms-repeat-el=\\\"section.elements\\\" ms-attr-id=\\\"$index+'-'+$key\\\" class=\\\"page-item\\\" ms-pageitem=\\\"\\\">{{$val.content}}</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/pages/editor/workspace/view.html\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = \"<div ms-controller=\\\"header\\\" class=\\\"header\\\" ms-include-src=\\\"tpl\\\"></div>\\n<div class=\\\"main\\\">\\n\\t<div ms-controller=\\\"toolbar\\\" class=\\\"toolbar\\\" ms-include-src=\\\"tpl\\\"></div>\\n\\t<div ms-controller=\\\"workspace\\\" class=\\\"workspace\\\" ms-include-src=\\\"tpl\\\"></div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./resources/assets/js/pages/editor/view.html\n ** module id = 18\n ** module chunks = 0\n **/"],"sourceRoot":""}